#!/bin/bash
#
# Instructions:
# Symlink this script to /etc/init.d/hastur-$APP.init where $APP matches
# the bluepill name, for example if I have bluepill-hastur-agent.pill,
# ln -nfs /opt/hastur/bin/hastur-bluepill.init /etc/init.d/hastur-agent.init
# Or, for hastur-core.rb using bluepill-hastur-core.pill:
# ln -nfs /opt/hastur/bin/hastur-bluepill.init /etc/init.d/hastur-core.init
#
### BEGIN INIT INFO
# Provides:          hastur-service
# Required-Start:    $local_fs $network $syslog
# Required-Stop:     $local_fs $network $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      1 0 6
# Short-Description: Start Hastur Bluepill Application
### END INIT INFO

die () { echo "$*" ; exit 1 ; }

GEM="/opt/hastur/bin/gem"
BLUEPILL="/opt/hastur/bin/bluepill"
APP=$(basename $0 |sed -r -e 's/\.init$//')
# gem blindly wraps all binfiles in ruby so we have to find where it's installed manually
PILL=$($GEM contents hastur-server |grep "bluepill-$APP.pill" |head -n 1)
PILL_APP=$(echo $APP |sed 's/-/_/g')

[ -e $BLUEPILL ] || die "$BLUEPILL does not exist - is your installation complete?"
[ -e $PILL ] || die "$PILL does not exist"

case "$APP" in
  hastur-agent)
    # limit resources for hastur-agent, we must never crash production
    # 256MB is a totally unreasonable amount of memory for hastur-agent to use
    # but it is safe and much more reasonable than unlimited
    # Future note: if anybody foolishly asks hastur-agent to launch, say, java
    # processes with a heap over 128MB or so, it will fail to launch.
    ulimit -l 134217728 -d 134217728 -m 134217728 -v 268435456 -n 5000 -u 100
    ;;
  hastur-core)
    ulimit -l unlimited # no limits on amount of locked memory (let bluepill handle it)
    ulimit -n 1048576   # dramatically increase max file descriptors
    ;;
  *)
    ;;
esac

case "$1" in
  start)
    $BLUEPILL load $PILL
    $BLUEPILL $PILL_APP start
    ;;
  stop)
    $BLUEPILL $PILL_APP stop
    ;;
  quit)
    $BLUEPILL $PILL_APP stop
    $BLUEPILL quit
    ;;
  restart)
    $BLUEPILL load $PILL
    $BLUEPILL $PILL_APP stop
    $BLUEPILL $PILL_APP start
    ;;
  status)
    $BLUEPILL $PILL_APP status
    ;;
  *)
    echo "Usage: $0 start|stop|restart|status|quit"
    ;;
esac

exit $RETVAL


# To run: "cat create_keyspace.cass | grep -v \# | cassandra-cli -h localhost"

CREATE KEYSPACE Hastur;
USE Hastur;

# Per-UUID Archives for various Hastur messages as JSON
# Row key: UUID-timestamp (rounded to granularity)
# Col key: name-timestamp or timestamp
CREATE COLUMN FAMILY GaugeArchive
  with comparator='BytesType(reversed=true)'
  and rows_cached = 0
  and keys_cached = 0;
CREATE COLUMN FAMILY CounterArchive
  with comparator='BytesType(reversed=true)'
  and rows_cached = 0
  and keys_cached = 0;
CREATE COLUMN FAMILY MarkArchive
  with comparator='BytesType(reversed=true)'
  and rows_cached = 0
  and keys_cached = 0;
CREATE COLUMN FAMILY LogArchive
  with comparator='BytesType(reversed=true)'
  and rows_cached = 0
  and keys_cached = 0;
CREATE COLUMN FAMILY ErrorArchive
  with comparator='BytesType(reversed=true)'
  and rows_cached = 0
  and keys_cached = 0;
CREATE COLUMN FAMILY EventArchive
  with comparator='BytesType(reversed=true)'
  and rows_cached = 0
  and keys_cached = 0;
CREATE COLUMN FAMILY HBAgentArchive
  with comparator='BytesType(reversed=true)'
  and rows_cached = 0
  and keys_cached = 0;
CREATE COLUMN FAMILY HBProcessArchive
  with comparator='BytesType(reversed=true)'
  and rows_cached = 0
  and keys_cached = 0;
CREATE COLUMN FAMILY HBPluginV1Archive
  with comparator='BytesType(reversed=true)'
  and rows_cached = 0
  and keys_cached = 0;
CREATE COLUMN FAMILY RegAgentArchive
  with comparator='BytesType(reversed=true)'
  and rows_cached = 0
  and keys_cached = 0;
CREATE COLUMN FAMILY RegProcessArchive
  with comparator='BytesType(reversed=true)'
  and rows_cached = 0
  and keys_cached = 0;
CREATE COLUMN FAMILY RegPluginV1Archive
  with comparator='BytesType(reversed=true)'
  and rows_cached = 0
  and keys_cached = 0;
CREATE COLUMN FAMILY InfoProcessArchive
  with comparator='BytesType(reversed=true)'
  and rows_cached = 0
  and keys_cached = 0;
CREATE COLUMN FAMILY InfoAgentArchive
  with comparator='BytesType(reversed=true)'
  and rows_cached = 0
  and keys_cached = 0;

# Per-UUID Full-granularity Hastur messages,
# only name, timestamp and value.
# Row key: UUID-timestamp (rounded to granularity)
# Col key: name-timestamp
CREATE COLUMN FAMILY StatCounter
  with comparator='BytesType(reversed=true)';
CREATE COLUMN FAMILY StatGauge
  with comparator='BytesType(reversed=true)';
CREATE COLUMN FAMILY StatMark
  with comparator='BytesType(reversed=true)';
CREATE COLUMN FAMILY HBProcess
  with comparator='BytesType(reversed=true)';
CREATE COLUMN FAMILY HBAgent
  with comparator='BytesType(reversed=true)';
CREATE COLUMN FAMILY HBPluginV1
  with comparator='BytesType(reversed=true)';

# Per-UUID Registration Rollups
# Row key: UUID-timestamp
# Col key: labelspec-registration-name
#                and
#          labelspec-registration-TIME
#                and
#          labelspec-registration-COLS
CREATE COLUMN FAMILY RegistrationDay;

# Seen UUIDs per time period
# Row key: timestamp (rounded down to day)
# Col key: UUID
CREATE COLUMN FAMILY UUIDDay;

# Seen stat names per time period
# Row key: timestamp (rounded down to day)
# Col key: message name
CREATE COLUMN FAMILY GaugeNameDay;
CREATE COLUMN FAMILY CounterNameDay;
CREATE COLUMN FAMILY MarkNameDay;
CREATE COLUMN FAMILY HBProcessNameDay;
CREATE COLUMN FAMILY HBPluginV1NameDay;

create keyspace HasturTrigger
  with placement_strategy = SimpleStrategy
  and strategy_options = {replication_factor : 1};

use HasturTrigger;

create column family TriggerState
  with column_type = Standard
  and comparator = UTF8Type
  and default_validation_class = UTF8Type
  and key_validation_class = UTF8Type
  and memtable_operations = 0.0328125
  and memtable_throughput = 7
  and rows_cached = 0.0
  and row_cache_save_period = 0
  and keys_cached = 200000.0
  and key_cache_save_period = 14400
  and read_repair_chance = 1.0
  and gc_grace = 864000
  and min_compaction_threshold = 4
  and max_compaction_threshold = 32
  and replicate_on_write = true
  and row_cache_provider = 'ConcurrentLinkedHashCacheProvider';
